df <- df %>%
filter(run_id %!in% participants_to_exclude)
def_table <- create_definition_table(df)
n_total_respondents <- demographic_table %>%
select(run_id) %>%
mutate(run_id = as.character(run_id)) %>%
distinct() %>%
nrow()
demo_key <- demo_key %>%
rename(t_id = Key)
def_table_2 <- def_table %>%
left_join(demo_key)
state_list <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 51) %>%
mutate(response = str_remove_all(response, '[[:punct:]]')) %>%
mutate(response = str_remove_all(response, "Q0"))
solfa_learned_table <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 50) %>%
mutate(response = str_remove_all(string = response,pattern = "\\{\"Colors\"\\:\\[\"")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"\\]\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\\"")) %>%
separate(col = response, into = c("r1","r2","r3","r4","r5","r6","r7"),  sep = ",") %>%
select(-trial_index) %>%
pivot_longer(cols = r1:r7, names_to = "system",values_to = "response") %>%
filter(!is.na(response))
solf_systems <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 50) %>%
mutate(response = str_remove_all(string = response,pattern = "\\{\"Colors\"\\:\\[\"")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"\\]\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\\"")) %>%
separate(col = response, into = c("r1","r2","r3","r4","r5","r6","r7"),  sep = ",") %>%
select(-trial_index) %>%
pivot_longer(cols = r1:r7, names_to = "system",values_to = "response") %>%
filter(!is.na(response)) %>%
select(response) %>%
distinct()
solf_systems$solfa_group <- c("Moveable","Moveable","Moveable","Fixed",
"Moveable","Moveable","Moveable","Fixed","No Response","Moveable")
usa_map_solfa <- solfa_learned_table %>%
left_join(states) %>%
left_join(solf_systems) %>%
filter(countr ==  "USA") %>%
select(solfa_group, state) %>%
group_by(state) %>%
count(solfa_group)
usa_map_solfa[usa_map_solfa$solfa_group == "No Response",] <- NA
total_n_survey <- demographic_table %>%
pull(run_id) %>%
unique() %>%
length()
## Column A
### Breakdown of Survey Respondents
```{r}
where_teach <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 56)  %>%
mutate(response = str_remove_all(string = response,pattern = "\\{\"Colors\"\\:\\[\"")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\]\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\\"")) %>%
mutate(response = str_remove_all(string = response,pattern = ",NASM-accredited music program")) %>%
count(response) %>%
ggplot(aes(x = reorder(response, n), y = n)) +
geom_histogram(stat = "identity") +
coord_flip() +
theme( axis.text = element_text(size = 14 )) +
labs(title = "Where do our respondents teach?",
x = "Description of School",
y = "Number of Responses")
where_teach
ggsave(filename = "img/fig/where_teach.png",where_teach, dpi = 300, height = 9, width = 12)
what_teach <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 40) %>%
mutate(response = str_remove_all(string = response,pattern = "\\{\"Colors\"\\:\\[\"")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\]\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\\"")) %>%
separate(col = response, into = c("r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12"),  sep = "\\),") %>%
select(-trial_index) %>%
pivot_longer(cols = r1:r12, names_to = "responsibility", values_to = "response") %>%
mutate(response = str_remove_all(response, pattern = "[[:punct:]]")) %>%
filter(!is.na(response)) %>%
count(response) %>%
ggplot(aes(x = reorder(response, n), y = n)) +
geom_histogram(stat = "identity") +
coord_flip() +
theme( axis.text = element_text(size = 14 )) +
labs(title = "Total Counts of Teaching Reponse Across Survey",
x = "Description of Teaching",
y = "Number of Responses")
what_teach
ggsave(filename = "img/fig/what_teach.png", what_teach, dpi = 300, height = 9, width = 12)
what_cow <- cowplot::plot_grid(where_teach, what_teach, ncol = 1)
ggsave(filename = "img/fig/what_cow.png", what_cow, dpi = 300, height = 15, width = 20)
### Breakdown of Classroom Time Devoted to RP and AP
```{r}
aprp_time_est_plot <- activity_table %>%
filter(t_id %in% c("perc_class_time_ap", "perc_class_time_rp")) %>%
mutate(response = as.numeric(response)) %>%
mutate(t_id = case_when(
t_id == "perc_class_time_ap" ~ "Absolute Pitch",
t_id == "perc_class_time_rp" ~ "Relative Pitch"
)) %>%
ggplot(aes(response, fill = t_id)) +
geom_freqpoly(aes(color = t_id)) +
facet_wrap(~t_id, nrow = 2) +
theme_bw() +
viridis::scale_color_viridis(discrete = TRUE, begin = .1, end = .8) +
labs(title = "Classroom Time Devoted to \nAbsolute Pitch vs Relative Pitch in the Classroom",
x = "Estimated Percentage of Time",
y = "Frequency Count in Survey",
color = "Question Bank")
aprp_time_est_plot
ggsave(filename = "img/fig/aprp_time_est_plot.png", aprp_time_est_plot, dpi = 300, height = 6, width = 12)
### Alluvial Chart
```{r}
library(ggalluvial)
system_learned <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 50) %>%
mutate(response = str_remove_all(string = response,pattern = "\\{\"Colors\"\\:\\[\"")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"\\]\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\\"")) %>%
separate(col = response, into = c("r1","r2","r3","r4","r5","r6","r7"),  sep = ",") %>%
select(-trial_index) %>%
pivot_longer(cols = r1:r7, names_to = "system",values_to = "response") %>%
filter(!is.na(response)) %>%
mutate(timepoint = "student")
# Prefer to Teach
system_prefer <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 52) %>%
mutate(response = str_remove_all(string = response,pattern = "\\{\"Colors\"\\:\\[\"")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"\\]\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\\"")) %>%
separate(col = response, into = c("r1","r2","r3","r4","r5","r6","r7"),  sep = ",") %>%
select(-trial_index) %>%
pivot_longer(cols = r1:r7, names_to = "system",values_to = "response") %>%
filter(!is.na(response)) %>%
mutate(timepoint = "prefer")
# Teach At Institution
system_institution <- df %>%
select(run_id, trial_index, response) %>%
filter(trial_index == 53) %>%
mutate(response = str_remove_all(string = response,pattern = "\\{\"Colors\"\\:\\[\"")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"\\]\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\\"")) %>%
separate(col = response, into = c("r1","r2","r3","r4","r5","r6","r7"),  sep = ",") %>%
select(-trial_index) %>%
pivot_longer(cols = r1:r7, names_to = "system",values_to = "response") %>%
filter(!is.na(response)) %>%
mutate(timepoint = "institution")
alluvial_data <- rbind(system_learned, system_prefer, system_institution)
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
ggsave(filename = "img/fig/alluvial_chart.png",plot = alluvial_chart, dpi = 300, height = 9, width = 14)
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=90, hjust=1)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=45, hjust=1)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=45, hjust=0)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20),
axis.text.x = element_text(angle=45, hjust=1)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
ggsave(filename = "img/fig/alluvial_chart.png",plot = alluvial_chart, dpi = 300, height = 9, width = 14)
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=25)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
ggsave(filename = "img/fig/alluvial_chart.png",plot = alluvial_chart, dpi = 300, height = 9, width = 14)
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","System Prefer to Teach"))) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
ggsave(filename = "img/fig/alluvial_chart.png",plot = alluvial_chart, dpi = 300, height = 9, width = 14)
alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "System Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
))
alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","Prefer to Teach")))
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","Prefer to Teach"))) %>%
distinct(response)
alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","Prefer to Teach"))) %>%
distinct(response)
alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","Prefer to Teach"))) %>%
mutate(response = str_trim(string = response))
alluvial_chart <- alluvial_data %>%
group_by(timepoint) %>%
count(response) %>%
left_join(solf_systems) %>%
mutate(timepoint = case_when(
timepoint == "student" ~ "Learned As Student",
timepoint == "prefer" ~ "Prefer to Teach",
timepoint == "institution" ~ "Currently Teach at Institution",
)) %>%
mutate(timepoint = factor(timepoint, levels = c("Learned As Student","Currently Teach at Institution","Prefer to Teach"))) %>%
mutate(response = str_trim(string = response)) %>%
ggplot(aes(x = timepoint, y = n, alluvium = response)) +
geom_alluvium(aes(fill = response, color = response),
alpha = .75, decreasing = FALSE) +
theme_bw() +
theme(text = element_text(size=20)) +
viridis::scale_fill_viridis(discrete = TRUE,option = "B") +
viridis::scale_color_viridis(discrete = TRUE,option = "B") +
labs( x = "Time Point",
y = "Number of Responses",
color = "System", fill = "System")
alluvial_chart
ggsave(filename = "img/fig/alluvial_chart.png",plot = alluvial_chart, dpi = 300, height = 9, width = 14)
#----------------------------------------------------------------------
library(dplyr)
library(magrittr)
library(readr)
library(ggplot2)
library(ggridges)
library(stringr)
library(usmap)
library(tidyr)
library(viridis)
#----------------------------------------------------------------------
source("R/cleaning_functions.R")
source("R/assemble_functions.R")
source("R/create_tables.R")
activity_table <- read_csv("data/cleaned_tables/activity_table.csv")
text_response_table <- read_csv("data/cleaned_tables/text_response_table.csv")
demographic_table <- read_csv("data/cleaned_tables/demographic_table.csv")
demo_key <- read_csv("data/demokey.csv")
states <- read.csv("data/temp_states - Sheet1.csv") %>% mutate(run_id = as.character(run_id))
activity_table
activity_table
activity_table %>% View()
activity_table
activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
filter(text_response_table == TRUE)
activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
filter(text_responses == TRUE)
activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
filter(text_responses == TRUE) %>%
select(run_id, response)
activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
filter(text_responses == TRUE) %>%
select(run_id, response) %>%
mutate(response = str_remove_all(string = response,pattern = "\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"$"))
activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
filter(text_responses == TRUE) %>%
select(run_id, response) %>%
mutate(response = str_remove_all(response, '[[:punct:]]')) %>%
mutate(response = str_remove_all(response, "Q0")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"$"))
participant_submitted_responses <- activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
filter(text_responses == TRUE) %>%
select(run_id, response) %>%
mutate(response = str_remove_all(response, '[[:punct:]]')) %>%
mutate(response = str_remove_all(response, "Q0")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"$"))
participant_submitted_responses
activity_table
participant_submitted_responses
activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
filter(text_responses == TRUE)
participant_submitted_responses <- activity_table %>%
mutate(text_responses = str_detect(string = response, pattern = "Q0")) %>%
mutate(RP_tag = str_detect(string = t_id, pattern = "RP")) %>%
mutate(AP_tag = str_detect(string = t_id, pattern = "AP")) %>%
filter(text_responses == TRUE) %>%
select(run_id, response, RP_tag, AP_tag) %>%
mutate(response = str_remove_all(response, '[[:punct:]]')) %>%
mutate(response = str_remove_all(response, "Q0")) %>%
mutate(response = str_remove_all(string = response,pattern = "\\}$")) %>%
mutate(response = str_remove_all(string = response,pattern = "\"$"))
participant_submitted_responses
activity_table
text_response_table
activity_table
demographic_table
temp_df <- read_csv("data/2022-03-16-data-complete.csv")
View(temp_df)
temp_df %>%
filter(trial_index %in% seq(12,20,2))
temp_df %>%
select(run_id, trial_index, response) %>%
filter(trial_index %in% seq(12,20,2))
temp_df %>%
select(run_id, trial_index, response) %>%
filter(trial_index %in% c(12:21))
